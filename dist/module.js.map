{"version":3,"sources":["../src/module.ts"],"names":["_","optionsEditorCtrl","tooltipEditorCtrl","migratePanelConfig","kbn","loadPluginCss","MetricsPanelCtrl","CoreEvents","PanelEvents","Bucket","BucketMatrix","BucketMatrixPager","rendering","Polygrafill","ColorModeDiscrete","VALUE_INDEX","TIME_INDEX","colorSchemes","name","value","invert","colorModes","opacityScales","dark","light","renderComplete","StatusHeatmapCtrl","$scope","$injector","annotationsSrv","datasource","color","mode","cardColor","colorScale","exponent","colorScheme","defaultColor","thresholds","cards","cardMinWidth","cardVSpacing","cardHSpacing","cardRound","xAxis","show","yAxis","minWidth","maxWidth","tooltip","freezeOnClick","showItems","items","showExtraInfo","extraInfo","legend","yLabel","usingSplitLabel","delimiter","labelTemplate","nullPointMode","yAxisSort","highlightCards","useMax","seriesFilterIndex","usingPagination","pageSize","hasAppEventCompatibleEmitter","events","fallbackToStringEvents","interval_to_ms","intervalToMs","panel","defaultsDeep","panelDefaults","bucketMatrix","bucketMatrixPager","setEnable","setDefaultPageSize","setPageSize","pager","graph","multipleValues","noColorDefined","discreteExtraSeries","dataWarnings","title","tip","noDatapoints","annotations","on","render","onRender","bind","dataReceived","onDataReceived","dataError","onDataError","dataSnapshotLoad","editModeInitialized","onInitEditMode","refresh","postRefresh","onRenderComplete","onCardColorChange","data","chartWidth","renderingCompleted","defaultPageSize","pageSizeViewer","setCurrent","switchToPrev","switchToNext","wndWidth","$","window","width","panelWidthFactor","gridPos","w","panelWidth","Math","ceil","max","ret","calculateInterval","getChartWidth","minCardWidth","minSpacing","maxCardsCount","intervalMs","rangeMs","range","to","valueOf","from","roundIntervalCeil","lowLimitMs","intervalOverride","interval","templateSrv","replace","scopedVars","slice","secondsToHms","annotationsPromise","getAnnotations","dashboard","datasourcePromises","then","r","issueQueriesWithInterval","origInterval","res","dataList","newBucketMatrix","convertDataToBuckets","targets","length","result","loading","addEditorTab","unitFormats","getUnitFormats","updateCardsValuesHasColorInfo","updateCardsValuesHasColorInfoSingle","newColor","scope","elem","attrs","ctrl","time","timeSrv","timeRangeForUrl","mostRecentBucket","buckets","xBucketSize","targetIndex","targetPartials","map","queryResult","i","target","pLabels","split","hasOwnProperty","push","targetKeys","keys","targetTimestampRanges","targetTimestamps","si","s","datapoints","datapoint","idx","uniq","tsTo","tsFrom","minFrom","targetEmptyBuckets","lastTs","topBucket","relTo","relFrom","values","mostRecent","bucketFrom","b","bucket","xid","minValue","Number","MAX_VALUE","maxValue","MIN_SAFE_INTEGER","dataIndex","dp","belong","put","min","bucketsLen"],"mappings":"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","sourcesContent":["// Libraries\nimport _ from 'lodash';\nimport { auto } from 'angular';\n\n// Components\nimport './color_legend';\nimport { optionsEditorCtrl } from './options_editor';\nimport { tooltipEditorCtrl } from './tooltip_editor';\nimport { migratePanelConfig } from './panel_config_migration';\n\n// Utils\nimport kbn from 'app/core/utils/kbn';\nimport {loadPluginCss} from 'app/plugins/sdk';\n\n// Types\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationsSrv } from 'app/features/annotations/annotations_srv';\nimport { CoreEvents, PanelEvents } from './libs/grafana/events/index';\nimport {Bucket, BucketMatrix, BucketMatrixPager } from './statusmap_data';\nimport rendering from './rendering';\nimport { Polygrafill } from './libs/polygrafill/index';\n\n\nimport {ColorModeDiscrete} from \"./color_mode_discrete\";\n\nconst VALUE_INDEX = 0,\n      TIME_INDEX = 1;\n\nconst colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n  { name: 'GnYlRd', value: 'interpolateGnYlRd', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' }\n];\n\nlet colorModes = ['opacity', 'spectrum', 'discrete'];\nlet opacityScales = ['linear', 'sqrt'];\n\nloadPluginCss({\n  dark: 'plugins/flant-statusmap-panel/css/statusmap.dark.css',\n  light: 'plugins/flant-statusmap-panel/css/statusmap.light.css'\n});\n\nexport var renderComplete:any = {name:'statusmap-render-complete'};\n\nclass StatusHeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  data: any;\n  bucketMatrix: BucketMatrix;\n  bucketMatrixPager: BucketMatrixPager;\n\n  graph: any;\n  discreteHelper: ColorModeDiscrete;\n  opacityScales: any = [];\n  colorModes: any = [];\n  colorSchemes: any = [];\n  unitFormats: any;\n\n  dataWarnings: {[warningId: string]: {title: string, tip: string}} = {};\n  multipleValues: boolean;\n  noColorDefined: boolean;\n  noDatapoints: boolean;\n\n  discreteExtraSeries: ColorModeDiscrete;\n\n  annotations: object[] = [];\n  annotationsPromise: any;\n\n  // TODO remove this transient variable: use ng-model-options=\"{ getterSetter: true }\"\n  pageSizeViewer: number = 15;\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // color mode\n    color: {\n      mode: 'spectrum',\n      cardColor: '#b4ff00',\n      colorScale: 'sqrt',\n      exponent: 0.5,\n      colorScheme: 'interpolateGnYlRd',\n      // discrete mode settings\n      defaultColor: '#757575',\n      thresholds: [] // manual colors\n    },\n    // buckets settings\n    cards: {\n      cardMinWidth: 5,\n      cardVSpacing: 2,\n      cardHSpacing: 2,\n      cardRound: null\n    },\n    xAxis: {\n      show: true\n    },\n    yAxis: {\n      show: true,\n      minWidth: -1,\n      maxWidth: -1\n    },\n    tooltip: {\n      show: true,\n      freezeOnClick: true,\n      showItems: false,\n      items: [], // see tooltip_editor.ts\n      showExtraInfo: false,\n      extraInfo: \"\",\n    },\n    legend: {\n      show: true\n    },\n    yLabel: {\n      usingSplitLabel: false,\n      delimiter: \"\",\n      labelTemplate: \"\",\n    },\n    // how null points should be handled\n    nullPointMode: 'as empty',\n    yAxisSort: 'metrics',\n    highlightCards: true,\n    useMax: true,\n\n    seriesFilterIndex: -1,\n\n    // Pagination options\n    usingPagination: false,\n    pageSize: 15\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, private annotationsSrv: AnnotationsSrv) {\n    super($scope, $injector);\n\n    if(!Polygrafill.hasAppEventCompatibleEmitter(this.events)){\n      CoreEvents.fallbackToStringEvents();\n      PanelEvents.fallbackToStringEvents();\n      renderComplete = 'statusmap-render-complete';\n    }\n\n    // Grafana 7.2 workaround\n    if (typeof kbn[\"intervalToMs\"] === \"function\") {\n      kbn.interval_to_ms = kbn.intervalToMs;\n    }\n\n    migratePanelConfig(this.panel);\n    _.defaultsDeep(this.panel, this.panelDefaults);\n\n    this.bucketMatrix = new BucketMatrix();\n\n    // Create pager for bucketMatrix and restore page size.\n    this.bucketMatrixPager = new BucketMatrixPager();\n    this.bucketMatrixPager.setEnable(this.panel.usingPagination);\n    this.bucketMatrixPager.setDefaultPageSize(this.panel.pageSize);\n    this.bucketMatrixPager.setPageSize(this.panel.pageSize);\n    $scope.pager = this.bucketMatrixPager;\n\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n\n    // default graph width for discrete card width calculation\n    this.graph = {\n      \"chartWidth\" : -1\n    };\n\n    this.multipleValues = false;\n    this.noColorDefined = false;\n\n    this.discreteExtraSeries = new ColorModeDiscrete($scope);\n\n    this.dataWarnings = {\n      noColorDefined: {\n        title: 'Data has value with undefined color',\n        tip: 'Check metric values, color values or define a new color',\n      },\n      multipleValues: {\n        title: 'Data has multiple values for one target',\n        tip: 'Change targets definitions or set \"use max value\"',\n      },\n      noDatapoints: {\n        title: 'No data points',\n        tip: 'No datapoints returned from data query',\n      }\n    };\n\n    this.annotations = [];\n    this.annotationsSrv = annotationsSrv;\n\n    this.events.on(PanelEvents.render, this.onRender.bind(this));\n    this.events.on(PanelEvents.dataReceived, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.dataError, this.onDataError.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onDataReceived.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n    this.events.on(PanelEvents.refresh, this.postRefresh.bind(this));\n    // custom event from rendering.js\n    this.events.on(renderComplete, this.onRenderComplete.bind(this));\n\n    this.onCardColorChange = this.onCardColorChange.bind(this);\n  }\n\n  onRenderComplete(data: any):void {\n    this.graph.chartWidth = data.chartWidth;\n    this.renderingCompleted();\n  }\n\n  changeDefaultPaginationSize(defaultPageSize: number): void {\n    this.bucketMatrixPager.setDefaultPageSize(defaultPageSize);\n    this.bucketMatrixPager.setPageSize(defaultPageSize);\n    this.pageSizeViewer = defaultPageSize;\n\n    this.render();\n    this.refresh();\n  }\n\n  onChangePageSize(): void {\n    if (this.pageSizeViewer <= 0) {\n      this.pageSizeViewer = this.bucketMatrixPager.defaultPageSize;\n    }\n    this.bucketMatrixPager.setPageSize(this.pageSizeViewer);\n    this.bucketMatrixPager.setCurrent(0);\n\n    this.render();\n    this.refresh();\n  }\n\n  onPrevPage(): void {\n    this.bucketMatrixPager.switchToPrev();\n    this.render();\n  }\n\n  onNextPage(): void {\n    this.bucketMatrixPager.switchToNext();\n    this.render();\n  }\n\n\n  // getChartWidth returns an approximation of chart canvas width or\n  // a saved value calculated during a render.\n  getChartWidth():number {\n    if (this.graph.chartWidth > 0) {\n      return this.graph.chartWidth;\n    }\n\n    const wndWidth = $(window).width();\n    // gripPos.w is a width in grid's measurements. Grid size in Grafana is 24.\n    const panelWidthFactor = this.panel.gridPos.w / 24;\n    const panelWidth = Math.ceil(wndWidth * panelWidthFactor);\n    // approximate width of the chart draw canvas:\n    // - y axis ticks are not rendered yet on first data receive,\n    //   so choose 200 as a decent value for y legend width\n    // - chartWidth can not be lower than the half of the panel width.\n    const chartWidth = _.max([\n      panelWidth - 200,\n      panelWidth/2\n    ]);\n\n    return chartWidth!;\n  }\n\n  // Quick workaround for 6.7 and 7.0+. There is no call to\n  // calculateInterval in updateTimeRange in those versions.\n  // TODO ts type has no argument for this method.\n  updateTimeRange(datasource?: any) {\n    let ret = super.updateTimeRange(datasource);\n    this.calculateInterval();\n    return ret;\n  }\n\n  // calculateInterval is called on 'refresh' to calculate an interval\n  // for datasource.\n  // It is override of calculateInterval from MetricsPanelCtrl.\n  calculateInterval() {\n    let chartWidth = this.getChartWidth();\n\n    let minCardWidth = this.panel.cards.cardMinWidth;\n    let minSpacing = this.panel.cards.cardHSpacing;\n    let maxCardsCount = Math.ceil((chartWidth-minCardWidth) / (minCardWidth + minSpacing));\n\n    let intervalMs;\n    let rangeMs = this.range.to.valueOf() - this.range.from.valueOf();\n\n    // this is minimal interval! kbn.round_interval will lower it.\n    intervalMs = this.discreteExtraSeries.roundIntervalCeil(rangeMs / maxCardsCount);\n\n    // Calculate low limit of interval\n    let lowLimitMs = 1; // 1 millisecond default low limit\n    \n    let intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    if (intervalOverride) {\n      if (intervalOverride[0] === '>') {\n        intervalOverride = intervalOverride.slice(1);\n      }\n      lowLimitMs = kbn.interval_to_ms(intervalOverride);\n    }\n\n    if (lowLimitMs > intervalMs) {\n      intervalMs = lowLimitMs;\n    }\n    let interval = kbn.secondsToHms(intervalMs / 1000);\n\n    this.intervalMs = intervalMs;\n    this.interval = interval;\n\n    // Get final buckets count after interval is adjusted\n    // TODO is it needed?\n    //this.xBucketsCount = Math.floor(rangeMs / intervalMs);\n  }\n\n  issueQueries(datasource: any) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n\n    /* Wait for annotationSrv requests to get datasources to\n     * resolve before issuing queries. This allows the annotations\n     * service to fire annotations queries before graph queries\n     * (but not wait for completion). This resolves\n     * issue 11806.\n     */\n    // 5.x before 5.4 doesn't have datasourcePromises.\n    if (\"undefined\" !== typeof(this.annotationsSrv.datasourcePromises)) {\n      return this.annotationsSrv.datasourcePromises.then(r => {\n        return this.issueQueriesWithInterval(datasource, this.interval);\n      });\n    } else {\n      return this.issueQueriesWithInterval(datasource, this.interval);\n    }\n  }\n\n  // Grafana 6.2 (and older) is using this.interval for queries,\n  // but Grafana 6.3+ is calculating interval again in queryRunner,\n  // so we need to save-restore this.panel.interval.\n  issueQueriesWithInterval(datasource: any, interval: any) {\n    var origInterval = this.panel.interval;\n    this.panel.interval = interval;\n    var res = super.issueQueries(datasource);\n    this.panel.interval = origInterval;\n    return res;\n  }\n\n  onDataReceived(dataList: any) {\n    this.data    = dataList;\n    // Quick workaround for 7.0+. There is no call to\n    // calculateInterval when enter Edit mode.\n    if (!this.intervalMs) {\n      this.calculateInterval();\n    }\n\n    let newBucketMatrix = this.convertDataToBuckets(dataList, this.range.from.valueOf(), this.range.to.valueOf(), this.intervalMs, true);\n\n    this.bucketMatrix = newBucketMatrix;\n    this.bucketMatrixPager.bucketMatrix = newBucketMatrix;\n    if (newBucketMatrix.targets.length !== this.bucketMatrix.targets.length) {\n      this.bucketMatrixPager.setCurrent(0);\n    }\n\n    this.noDatapoints = this.bucketMatrix.noDatapoints;\n\n    if (this.annotationsPromise) {\n      this.annotationsPromise.then(\n        (result: { alertState: any; annotations: any }) => {\n          this.loading = false;\n          //this.alertState = result.alertState;\n          if (result.annotations && result.annotations.length > 0) {\n            this.annotations = result.annotations;\n          } else {\n            this.annotations = [];\n          }\n          this.render();\n        },\n        () => {\n          this.loading = false;\n          this.annotations = [];\n          this.render();\n        }\n      );\n    } else {\n      this.loading = false;\n      this.annotations = [];\n      this.render();\n    }\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', optionsEditorCtrl, 2);\n    this.addEditorTab('Tooltip', tooltipEditorCtrl, 3);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  // onRender will be called before StatusmapRenderer.onRender.\n  // Decide if warning should be displayed over cards.\n  onRender() {\n    if (!this.range || !this.data) {\n      this.noDatapoints = true;\n      return;\n    }\n\n    this.multipleValues = false;\n    if (!this.panel.useMax) {\n      if (this.bucketMatrix) {\n        this.multipleValues = this.bucketMatrix.multipleValues;\n      }\n    }\n\n    this.noColorDefined = false;\n    if (this.panel.color.mode === 'discrete') {\n      if (this.panel.seriesFilterIndex == -1) {\n        this.discreteExtraSeries.updateCardsValuesHasColorInfo();\n      } else {\n        this.discreteExtraSeries.updateCardsValuesHasColorInfoSingle();\n      }\n      if (this.bucketMatrix) {\n        this.noColorDefined = this.bucketMatrix.noColorDefined;\n      }\n    }\n\n    this.noDatapoints = false;\n    if (this.bucketMatrix) {\n      this.noDatapoints = this.bucketMatrix.noDatapoints;\n    }\n  }\n\n  onCardColorChange(newColor) {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  }\n\n  onDataError() {\n    this.data = [];\n    this.annotations = [];\n    this.render();\n  }\n\n  postRefresh() {\n    this.noColorDefined = false;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n  // Compatible with Grafana 7.0 overrides feature.\n  retrieveTimeVar() {\n    var time = this.timeSrv.timeRangeForUrl();\n    return 'from=' + time.from + '&to=' + time.to;\n  }\n\n  // convertToBuckets groups values in data into buckets by target and timestamp.\n  //\n  // data is a result from datasource. It is an array of timeseries and tables:\n  /* [\n    // timeseries\n    {\n      target: \"query alias\",\n      refId: \"A\",\n      datapoints: [\n        [0, 1582681239911],\n        [3, 158....],\n        ...\n      ],\n      tags?:{key: value,...}\n    },\n    // table\n    {\n      name: \"table name\",\n      refId: \"B\",\n      columns: [\n        {text: \"id\"},\n        {text: \"info\"},\n        ...\n      ],\n      rows: [\n        [1, \"123\"],\n        [2, \"44411\"],\n        ...\n      ]\n    },\n...\n  ]\n\n  to and from — a time range of the panel.\n  intervalMs — a calculated interval. It is used to split a time range.\n  */\n  convertDataToBuckets(data:any, from:number, to:number, intervalMs: number, mostRecentBucket: boolean):BucketMatrix {\n    let bucketMatrix = new BucketMatrix();\n    bucketMatrix.rangeMs = to - from;\n    bucketMatrix.intervalMs = intervalMs;\n\n    if (!data || data.length == 0) {\n      // Mimic heatmap and graph 'no data' labels.\n      bucketMatrix.targets = [\n        \"1.0\", \"0.0\", \"-1.0\"\n      ];\n      bucketMatrix.buckets[\"1.0\"] = [];\n      bucketMatrix.buckets[\"0.0\"] = [];\n      bucketMatrix.buckets[\"-1.0\"] = [];\n      bucketMatrix.xBucketSize = 42;\n      bucketMatrix.noDatapoints = true;\n      return bucketMatrix;\n    }\n\n    let targetIndex: {[target: string]: number[]} = {};\n    let targetPartials: {[target: string]: string[]} = {};\n\n    // Group indicies of elements in data by target (y label).\n\n    // lodash version:\n    //_.map(data, (d, i) => {\n    //  targetIndex[d.target] = _.concat(_.toArray(targetIndex[d.target]), i);\n    //});\n\n    data.map((queryResult: any, i: number) => {\n      // Init yLabel as the query target\n      let yLabel = queryResult.target;\n\n      // Check if there is some labelTemplate configured\n      if (this.panel.yLabel.usingSplitLabel && this.panel.yLabel.delimiter != \"\" ) {\n        let pLabels = queryResult.target.split(this.panel.yLabel.delimiter);\n\n        // Load all possible values as scoped vars and load them into targetPartials\n        // to be used on different components as Bucket and BucketMatrix props\n        let scopedVars = []\n        scopedVars[`__y_label`] = {value: yLabel}\n        for (let i in pLabels) {\n          scopedVars[`__y_label_${i}`] = {value: pLabels[i]};\n        }\n\n        if (this.panel.yLabel.labelTemplate != \"\") {\n          yLabel = this.templateSrv.replace(this.panel.yLabel.labelTemplate, scopedVars)\n        }\n\n        targetPartials[yLabel] = pLabels\n      }\n\n      //reset if it already exists\n      if (!targetIndex.hasOwnProperty(yLabel)) {\n        targetIndex[yLabel] = [];\n      }\n      targetIndex[yLabel].push(i);\n    });\n\n    let targetKeys = _.keys(targetIndex);\n\n    //console.log (\"targetIndex: \", targetIndex, \"targetKeys: \", targetKeys);\n\n    let targetTimestampRanges: {[target: string]: {[timestamp: number]: number[]}} = {};\n\n    // Collect all timestamps for each target.\n    // Make map timestamp => [from, to]. from == previous ts, to == ts from datapoint.\n    targetKeys.map((target) => {\n      let targetTimestamps: any[] = [];\n\n      for (let si = 0; si < targetIndex[target].length; si++) {\n        let s = data[targetIndex[target][si]];\n        _.map(s.datapoints, (datapoint, idx) => {\n          targetTimestamps.push(datapoint[TIME_INDEX]-from);\n        })\n      }\n\n      //console.log(\"timestamps['\"+target+\"'] = \", targetTimestamps);\n\n      targetTimestamps = _.uniq(targetTimestamps);\n\n      //console.log(\"uniq timestamps['\"+target+\"'] = \", targetTimestamps);\n\n      targetTimestampRanges[target] = [];\n      for (let i = targetTimestamps.length-1 ; i>=0; i-- ) {\n        let tsTo = targetTimestamps[i];\n        let tsFrom = 0;\n        if (tsTo < 0) {\n          tsFrom = tsTo - intervalMs;\n        } else {\n          if (i-1 >= 0) {\n            // Set from to previous timestamp + 1ms;\n            tsFrom = targetTimestamps[i-1]+1;\n            // tfTo - tfFrom should not be more than intervalMs\n            let minFrom = tsTo - intervalMs;\n            if (tsFrom < minFrom) {\n              tsFrom = minFrom;\n            }\n          }\n        }\n        targetTimestampRanges[target][tsTo] = [tsFrom, tsTo];\n      }\n    });\n\n    // console.log (\"targetTimestampRanges: \", targetTimestampRanges);\n\n    // Create empty buckets using intervalMs to calculate ranges.\n    // If mostRecentBucket is set, create a bucket with a range \"to\":\"to\"\n    // to store most recent values.\n    targetKeys.map((target) => {\n      let targetEmptyBuckets: any[] = [];\n\n      let lastTs = to-from;\n\n      if (mostRecentBucket) {\n        let topBucket = new Bucket();\n        topBucket.yLabel = target;\n        topBucket.relTo = lastTs;\n        topBucket.relFrom = lastTs;\n        topBucket.values = [];\n        topBucket.mostRecent = true;\n        if (targetTimestampRanges[target].hasOwnProperty(lastTs)) {\n          topBucket.relFrom = targetTimestampRanges[target][lastTs][0];\n          lastTs = topBucket.relFrom;\n        }\n        topBucket.to = topBucket.relTo+from;\n        topBucket.from = topBucket.relFrom+from;\n        targetEmptyBuckets.push(topBucket);\n      }\n\n      let idx = 0;\n      let bucketFrom: number = 0;\n      while (bucketFrom >= 0) {\n        let b = new Bucket();\n        b.yLabel = target;\n        b.pLabels = targetPartials[target]\n        b.relTo = lastTs - idx*intervalMs;\n        b.relFrom = lastTs - ((idx+1) * intervalMs);\n        b.to = b.relTo+from;\n        b.from = b.relFrom+from;\n        b.values = [];\n        bucketFrom = b.relFrom;\n        targetEmptyBuckets.push(b);\n        idx++;\n      }\n\n      targetEmptyBuckets.map((bucket, i) => {\n        bucket.xid = i;\n      });\n\n      bucketMatrix.buckets[target] = targetEmptyBuckets;\n    });\n\n    //console.log (\"bucketMatrix: \", bucketMatrix);\n\n    // Put values into buckets.\n    bucketMatrix.minValue = Number.MAX_VALUE;\n    bucketMatrix.maxValue = Number.MIN_SAFE_INTEGER;\n    targetKeys.map((target) => {\n      targetIndex[target].map((dataIndex) => {\n        let s = data[dataIndex];\n        s.datapoints.map((dp: any) => {\n          for (let i = 0; i < bucketMatrix.buckets[target].length; i++) {\n            if (bucketMatrix.buckets[target][i].belong(dp[TIME_INDEX])) {\n              bucketMatrix.buckets[target][i].put(dp[VALUE_INDEX]);\n            }\n          }\n        });\n      });\n      bucketMatrix.buckets[target].map((bucket) => {\n        bucket.minValue = _.min(bucket.values);\n        bucket.maxValue = _.max(bucket.values);\n        if (bucket.minValue < bucketMatrix.minValue) {\n          bucketMatrix.minValue = bucket.minValue;\n        }\n        if (bucket.maxValue > bucketMatrix.maxValue) {\n          bucketMatrix.maxValue = bucket.maxValue;\n        }\n        bucket.value = bucket.maxValue;\n        if (bucket.values.length > 1) {\n          bucketMatrix.multipleValues = true;\n          bucket.multipleValues = true;\n\n          bucket.value = this.panel.seriesFilterIndex != -1 ? bucket.values[this.panel.seriesFilterIndex] : bucket.maxValue;\n        }\n      })\n    });\n\n    bucketMatrix.xBucketSize = Number.MIN_SAFE_INTEGER;\n    targetKeys.map((target) => {\n      let bucketsLen: number = bucketMatrix.buckets[target].length;\n      if (bucketsLen > bucketMatrix.xBucketSize) {\n        bucketMatrix.xBucketSize = bucketsLen;\n      }\n    });\n\n    //console.log (\"bucketMatrix with values: \", bucketMatrix);\n\n    bucketMatrix.targets = targetKeys;\n    bucketMatrix.pLabels = targetPartials;\n    return bucketMatrix;\n  }\n}\n\nexport {\n  StatusHeatmapCtrl, StatusHeatmapCtrl as PanelCtrl\n};\n"],"file":"module.js"}